:root{  /* Se le conoce como custom properties, no existe esta 
           etiqueta en HTML */
    --blanco: #ffffff; /* Se define una paleta de color blanco en HEX */
    --oscuro: #212121; 
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #DFE9F3;

    --fuente-principal: 3.8rem; /* Se puede definir cualquier tipo de valor que se va a utilizar varias veces */

}

/* GLOBALES */

html {
    font-size: 62.5%;
    box-sizing: border-box; /* Hack para Box Model */
    scroll-snap-type: y mandatory; /* Si se desea que el scroll se haga horizontal, entonces se pone x mandatory. Con mandatory el scroll se hace sin mover mucho
                                    la pantalla hacia abajo, si queremos que con un poco de scroll se quede en la misma sección entonces usar proximity */
}

.servicios, .navegacion-principal, .formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*, *:before, *:after { 
    box-sizing: inherit;
}

/* *{} --> selecciona todos los elementos de HTML y les aplica el border-box, de esta forma, todos los elementos tienen un box, de forma que si tienen un padding,
no va a afectar al tamaño de la caja, sino que se le aplica dentro sin ampliar el tamaño */

/* *:after --> contenido que no existe como tal, se conoce como pseudoelemento y se utilizan en algunos casos, de la misma manera actua el before NO SE PUEDEN 
SELECCIONAR, NO EXISTEN EN EL HTML, PERO SI EN EL CSS */

body {
    font-size: 16px;  /* 1rem = 10px */
    font-family: 'Krub', sans-serif; /* Si se coloca en esta sección, esta letra se aplicará en todos los elementos de todo el sitio web */
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);
}

.contenedor{
    max-width: 120rem;
    /*margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;*/

    /*margin: 0 auto 0 auto; /* utiliza los 4 valores anteriores en una única variable primero el top, right, bottom, left*/
    margin: 0 auto; /* CSS entiende que el primer valor es top y bottom y el segundo es left y right */
}

.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.boton:hover {
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48); /* El prefijo -webkit es para Chrome */
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48); /* El prefijo -moz es para Mozilla */
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/* TIPOGRAFIA */

h1{
    font-size: 3.8rem;
}

h2{
    font-size: 2.8rem;
}

h3{
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}

/* TITULOS */

/*.titulo {
    /* font-weight: normal; /* En el HTML tenemos 2 weight, si aqui ponemos bold, hace referencia a 700, si es normal a 400, también se puede poner el número directamente */
    /* color: var(--primario);/* no puedes poner blanco por la paleta ya definida */
    
.titulo span{
    font-size: 2rem;
}

/* UTILIDADES */

.w-sm-100{
    width: 100%;
}

@media (min-width: 768px) {
    .w-sm-100 {
        width: auto;
    }
}

.flex {
    display: flex;
}

.alinear-derecha {
    justify-content: flex-end;
}

/* NAVEGACION PRINCIPAL */

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal{
    display: flex;
    flex-direction: column; /* De esta forma se verá en columna la barra de navegación para todos los dispositivos */
    /*align-items: center; /* Alinea los elementos en vertical */ 
}

@media (min-width: 768px) { /* Para los dispositivos mayores (a partir de una tablet) se pondrá la barra de navegación como fila */
    .navegacion-principal{ /*No se definen los demás elementos porque se heredan*/
        flex-direction: row;
        justify-content: space-between; /* Para alinear los elementos que se encuentran en horizontal. Se ignora el justify porque el flex está en columna */
    }
}

.navegacion-principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem; /* lo interpreta como el margin, de forma que se pone el valor de 1rem para los cuatro campos */
}

.navegacion-principal a:hover{  /*Pseudoclase de forma que se realiza el código cuando el ratón se encuentra en nav */
    background-color: var(--primario);
    color: var(--oscuro);
}

/* HERO */

.hero{
    background-image: url(/freelancer_inicio/Imagenes/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover; /* Utiliza todo el ancho disponible para poner la imagen */
    height: 450px;
    position: relative;
    margin-bottom: 2rem;
}

.contenido-hero{
    position: absolute;
    background-color: rgba(0,0,0,.6); /* El último valor hace referencia al nivel de transparencia, siendo del 0-1 siendo el 1 negro */
    background-color: rgb(0 0 0 / 70%);   /* Es lo mismo que lo anterior */
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2, .contenido-hero p {
    color: var(--blanco);
}

.contenido .ubicacion {
    display: flex;
    align-items: flex-end;
}

/* SERVICIOS */

@media (min-width: 768px) {
    .servicios{
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Para poder definir su posición en vertical. De 100% se dividira en tantos 1fr como se deseen ( 1fr 1fr 1fr) */
        /*grid-template-rows: 200px 800px; /* Para poder definir su posición en horizontal */
        column-gap: 1rem; /* Agrega separación como si fuese un margen para separar las columnas*/
    
        /*grid: 200px 800px / 300px 300px;  /*La primera parte hace referencia a las filas, la segunda a las columnas, es más sencillo si conoces el código*/
    } 
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3 {
    color: var(--secundario);
    font-weight: normal;
}

.servicio p {
    line-height: 2;
    text-align: center;
}

.servicio .iconos {
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/* CONTACTO */

.formulario {
    background-color: var(--gris);
    width: min(60rem, 100%); /* Utiliza el valor más pequeño entre el valor 60rem y el valor que corresponde al 100%*/
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset{
    border: none;
}

.formulario legend {
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    .campo:nth-child(3), .campo:nth-child(4) {
        grid-column: 1 / 3;  /* Para posicionar los elementos */
    }
}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.campo textarea{
    height: 20rem;
}

/* Otra manera de hacerlo, para los inputs que son únicos o con carácterísticas únicas es ponerlo .campo input[type="text"] */
.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/* FOOTER */

.footer {
    text-align: center;
}